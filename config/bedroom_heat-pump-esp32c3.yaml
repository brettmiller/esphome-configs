
substitutions:
  device_name: bedroom-heat-pump 
  device_id: bedroom_heat_pump 
  description: Primary bedroom heat pump
  name: Bedroom heat pump

packages:
  <<: !include_dir_named common

external_components:
  #- source: github://geoffdavis/esphome-mitsubishiheatpump
  - source: github://geoffdavis/esphome-mitsubishiheatpump@develop

esphome:
  name: ${device_name}
  comment: ${description}
  # Set platform options to use c++ 17 instead of 11
  platformio_options:
    build_unflags:
      - "-std=gnu++11"
    build_flags:
      - "-std=gnu++17"
  #on_boot:
  #  then:
  #    - delay: 2s
  #    - light.turn_on:
  #        id: bedroom_hp_led
  #        brightness: 15%

esp32:
  board: lolin_c3_mini

## Enable web server - requires connecting to https://oi.esphome.io for .js (or a local server to host them)
##<<: !include components/web_server.yaml

# Enable logging
logger:
#  baud_rate: 0 #disable UART logging

#light:
#  - platform: neopixelbus
#    id: ${device_id}_led
#    #restore_mode: ALWAYS_ON
#    type: GRB
#    variant: WS2812
#    method: ESP32_RMT_1
#    #method: ESP32_RMT
#    num_leds: 1
#    pin: GPIO7
#    name: "Bedroom heatpump led"
#    # hack to reduce brightness, now set using 'on_boot:' 
#    #color_correct: [11%, 11%, 11%]

climate:
  - platform: mitsubishi_heatpump
    # using "name: none" uses friendly name
    name: none
    id: ${device_id}_climate
    # ESP32 only - change UART0 to UART1 or UART2 and remove the
    # logging:baud_rate above to allow the built-in UART0 to function for
    # logging. (default UART1: GPIO6-RX, GPIO7-TX)
    #hardware_uart: UART0
    hardware_uart: UART1
    baud_rate: 9600
    # as of 2023-05-02 setting rx/tx pins requires develop branch of 
    # github://geoffdavis/esphome-mitsubishiheatpump@develop
    tx_pin: 7
    rx_pin: 6
    #tx_pin: 12
    #rx_pin: 13
    visual:
      temperature_step: 1.0

