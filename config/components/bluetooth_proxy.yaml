# Common code for bluetooth proxies

esphome:
  name: ${device_name}
#  name_add_mac_suffix: true # causes issues w/ being found for ota/logs
  comment: ${description}

esp32:
  board: ${board}
  framework:
    type: esp-idf

packages:
  <<: !include_dir_named ../common

# Enable logging
logger:
#  baud_rate: 0 #disable UART logging

# Enable web server - required connecting to https://oi.esphome.io for .js (or a local server to host them)
#web_server:
#  port: 80

bluetooth_proxy:
  active: true

esp32_ble_tracker:
  scan_parameters:
    interval: 1100ms
    window: 1100ms
    active: true
  ## run automation to log when BT advertisement is recieved
  #on_ble_advertise:
  #  #- mac_address: 11:22:33:44:55:66
  #  #  then:
  #     - lambda: |-
  #          ESP_LOGD("ble_adv", "New BLE device");
  #          ESP_LOGD("ble_adv", "  address: %s", x.address_str().c_str());
  #          ESP_LOGD("ble_adv", "  name: %s", x.get_name().c_str());
  #          ESP_LOGD("ble_adv", "  Advertised service UUIDs:");
  #          for (auto uuid : x.get_service_uuids()) {
  #              ESP_LOGD("ble_adv", "    - %s", uuid.to_string().c_str());
  #          }
  #          ESP_LOGD("ble_adv", "  Advertised service data:");
  #          for (auto data : x.get_service_datas()) {
  #              ESP_LOGD("ble_adv", "    - %s: (length %i)", data.uuid.to_string().c_str(), data.data.size());
  #          }
  #          ESP_LOGD("ble_adv", "  Advertised manufacturer data:");
  #          for (auto data : x.get_manufacturer_datas()) {
  #              ESP_LOGD("ble_adv", "    - %s: (length %i)", data.uuid.to_string().c_str(), data.data.size());
  #          }

